name: Build JavaFetch

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available 
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build
        run: mvn clean package -B
      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: JavaFetch
          path: target/*.jar

      - name: Save Maven repository for release job
        uses: actions/upload-artifact@v4.4.3
        with:
          name: MavenRepository
          path: ~/.m2/repository

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Install libxml2-utils
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils
        
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          version=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "::set-output name=version::$version"

      - name: Download artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: JavaFetch

      - name: Download maven repository
        uses: actions/download-artifact@v4.1.8
        with:
          name: MavenRepository
          path:  ~/.m2/repository

      - name: List files
        run: |
          ls -R .
      
      #- name: Restore Maven repository
      #  run: |
      #    mkdir -p ~/.m2
      #    mv repository ~/.m2/repository
            
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Release v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR
        run: |
          mvn package
          rm -f original-*.jar
          echo "Uploading artifact..."
          gh release upload v${{ steps.extract_version.outputs.version }} target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
